# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "am-pattern-3.resource.prefix" . }}-am-cp-1-conf
  namespace : {{ .Release.Namespace }}
  {{ if .Values.wso2.deployment.am.cp.config }}
data:
  {{- range $index, $content := .Values.wso2.deployment.am.cp.config }}
  {{ $index }}: |-
  {{ tpl $content $ | indent 4 }}
  {{- end }}

  {{ else }}
data:
  deployment.toml: |-
    [server]
    hostname = "{{ .Values.wso2.deployment.am.cp.ingress.hostname }}"
    #offset=0
    base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
    #discard_empty_caches = false
    server_role = "control-plane"

    [super_admin]
    username = "admin"
    password = "admin"
    create_admin_account = true

    [user_store]
    type = "database_unique_id"

    [database.apim_db]
    type = "mysql"
    url = "jdbc:mysql://{{ .Values.wso2.deployment.am.customConfig.dataSources.server.hostname }}:{{ .Values.wso2.deployment.am.customConfig.dataSources.server.port }}/{{ .Values.wso2.deployment.am.customConfig.dataSources.databases.apim.name }}?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = {{ .Values.wso2.deployment.am.customConfig.dataSources.databases.apim.username | quote }}
    password = {{ .Values.wso2.deployment.am.customConfig.dataSources.databases.apim.password | quote }}
    driver = "com.mysql.cj.jdbc.Driver"

    [database.shared_db]
    type = "mysql"
    url = "jdbc:mysql://{{ .Values.wso2.deployment.am.customConfig.dataSources.server.hostname }}:{{ .Values.wso2.deployment.am.customConfig.dataSources.server.port }}/{{ .Values.wso2.deployment.am.customConfig.dataSources.databases.shared.name }}?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = {{ .Values.wso2.deployment.am.customConfig.dataSources.databases.shared.username | quote }}
    password = {{ .Values.wso2.deployment.am.customConfig.dataSources.databases.shared.password | quote }}
    driver = "com.mysql.cj.jdbc.Driver"

    [database.identity_db]
    url = "jdbc:mysql://{{ .Values.wso2.deployment.am.customConfig.dataSources.server.hostname }}:{{ .Values.wso2.deployment.am.customConfig.dataSources.server.port }}/{{ .Values.wso2.deployment.am.customConfig.dataSources.databases.identity.name }}?autoReconnect=true&amp;useSSL=false"
    username = {{ .Values.wso2.deployment.am.customConfig.dataSources.databases.identity.username | quote }}
    password = {{ .Values.wso2.deployment.am.customConfig.dataSources.databases.identity.password | quote }}
    driver = "com.mysql.cj.jdbc.Driver"

    [keystore.primary]
    file_name =  "primaryKeyStore.jks"
    type =  "JKS"
    alias =  {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.primary.alias | quote }}
    password = {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.primary.password | quote }}
    key_password = {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.primary.password | quote }}

    [keystore.tls]
    file_name =  "secondaryKeyStore.jks"
    type =  "JKS"
    alias =  {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.secondary.alias | quote }}
    password = {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.secondary.password | quote }}
    key_password = {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.secondary.password | quote }}

    [keystore.internal]
    file_name =  "internalKeyStore.jks"
    type =  "JKS"
    alias =  {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.internal.alias | quote }}
    password = {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.internal.password | quote }}
    key_password = {{ .Values.wso2.deployment.am.customConfig.cryptography.keyStores.internal.password | quote }}

    [truststore]
    file_name = "client-truststore.jks"
    type = "JKS"
    password = {{ .Values.wso2.deployment.am.customConfig.cryptography.trustStorePassword | quote }}

    [[apim.gateway.environment]]
    name = "Default"
    type = "hybrid"
    display_in_api_console = true
    description = "This is a hybrid gateway that handles both production and sandbox token traffic."
    show_as_token_endpoint_url = true
    service_url = "https://{{ template "am-pattern-3.resource.prefix" . }}-am-gateway-service:${mgt.transport.https.port}${carbon.context}services/"
    username= "${admin.username}"
    password= "${admin.password}"
    ws_endpoint = "ws://localhost:9099"
    wss_endpoint = "wss://localhost:8099"
    http_endpoint = "http://{{ .Values.wso2.deployment.am.gateway.ingress.hostname }}"
    https_endpoint = "https://{{ .Values.wso2.deployment.am.gateway.ingress.hostname }}"
    websub_event_receiver_http_endpoint = "http://{{ .Values.wso2.deployment.am.websub.ingress.hostname }}"
    websub_event_receiver_https_endpoint = "https://{{ .Values.wso2.deployment.am.websub.ingress.hostname }}"

    #[apim.cache.gateway_token]
    #enable = true
    #expiry_time = "900s"

    #[apim.cache.resource]
    #enable = true
    #expiry_time = "900s"

    #[apim.cache.km_token]
    #enable = false
    #expiry_time = "15m"

    #[apim.cache.recent_apis]
    #enable = false

    #[apim.cache.scopes]
    #enable = true

    #[apim.cache.publisher_roles]
    #enable = true

    #[apim.cache.jwt_claim]
    #enable = true
    #expiry_time = "15m"

    #[apim.cache.tags]
    #expiry_time = "2m"

    [apim.key_manager]
    service_url = "https://wso2is-pattern-1-identity-service:9443/services/"
    type = "WSO2-IS"
    username = "$ref{super_admin.username}"
    password = "$ref{super_admin.password}"
    #pool.init_idle_capacity = 50
    #pool.max_idle = 100
    #key_validation_handler_type = "default"
    #key_validation_handler_type = "custom"
    #key_validation_handler_impl = "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler"

    #[apim.oauth_config]
    #enable_outbound_auth_header = false
    #auth_header = "Authorization"
    #revoke_endpoint = "https://localhost:${https.nio.port}/revoke"
    #enable_token_encryption = false
    #enable_token_hashing = false

    [apim.devportal]
    url = "https://{{ .Values.wso2.deployment.am.cp.ingress.hostname }}/devportal"
    #enable_application_sharing = false
    #if application_sharing_type, application_sharing_impl both defined priority goes to application_sharing_impl
    #application_sharing_type = "default" #changed type, saml, default #todo: check the new config for rest api
    #application_sharing_impl = "org.wso2.carbon.apimgt.impl.SAMLGroupIDExtractorImpl"
    #display_multiple_versions = false
    #display_deprecated_apis = false
    #enable_comments = true
    #enable_ratings = true
    #enable_forum = true
    #enable_anonymous_mode=true
    #enable_cross_tenant_subscriptions = true
    #default_reserved_username = "apim_reserved_user"

    [apim.cors]
    allow_origins = "*"
    allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
    allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey","Internal-Key"]
    allow_credentials = false

    [apim.throttling]
    event_duplicate_url = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-2-service:5672"]
    service_url = "https://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-service:${mgt.transport.https.port}/services/"
    #enable_data_publishing = true
    #enable_policy_deploy = true
    #enable_blacklist_condition = true
    #enable_persistence = true
    throttle_decision_endpoints = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-1-service:5672","tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-2-service:5672"]

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-1-service:9611"]
    traffic_manager_auth_urls = ["ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-1-service:9711"]
    type = "loadbalance"

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-2-service:9611"]
    traffic_manager_auth_urls = ["ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-2-service:9711"]
    type = "loadbalance"

    #[[apim.throttling.url_group]]
    #traffic_manager_urls = ["tcp://localhost:9611","tcp://localhost:9611"]
    #traffic_manager_auth_urls = ["ssl://localhost:9711","ssl://localhost:9711"]
    #type = "failover"

    #[apim.workflow]
    #enable = false
    #service_url = "https://localhost:9445/bpmn"
    #username = "$ref{super_admin.username}"
    #password = "$ref{super_admin.password}"
    #callback_endpoint = "https://localhost:${mgt.transport.https.port}/api/am/admin/v0.17/workflows/update-workflow-status"
    #token_endpoint = "https://localhost:${https.nio.port}/token"
    #client_registration_endpoint = "https://localhost:${mgt.transport.https.port}/client-registration/v0.17/register"
    #client_registration_username = "$ref{super_admin.username}"
    #client_registration_password = "$ref{super_admin.password}"

    #data bridge config
    #[transport.receiver]
    #type = "binary"
    #worker_threads = 10
    #session_timeout = "30m"
    #keystore.file_name = "$ref{keystore.tls.file_name}"
    #keystore.password = "$ref{keystore.tls.password}"
    #tcp_port = 9611
    #ssl_port = 9711
    #ssl_receiver_thread_pool_size = 100
    #tcp_receiver_thread_pool_size = 100
    #ssl_enabled_protocols = ["TLSv1","TLSv1.1","TLSv1.2"]
    #ciphers = ["SSL_RSA_WITH_RC4_128_MD5","SSL_RSA_WITH_RC4_128_SHA"]

    #[apim.notification]
    #from_address = "APIM.com"
    #username = "APIM"
    #password = "APIM+123"
    #hostname = "localhost"
    #port = 3025
    #enable_start_tls = false
    #enable_authentication = true

    #[apim.token.revocation]
    #notifier_impl = "org.wso2.carbon.apimgt.keymgt.events.TokenRevocationNotifierImpl"
    #enable_realtime_notifier = true
    #realtime_notifier.ttl = 5000
    #enable_persistent_notifier = true
    #persistent_notifier.hostname = "https://localhost:2379/v2/keys/jti/"
    #persistent_notifier.ttl = 5000
    #persistent_notifier.username = "root"
    #persistent_notifier.password = "root"

    [[event_handler]]
    name="userPostSelfRegistration"
    subscriptions=["POST_ADD_USER"]

    [service_provider]
    sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

    [[event_listener]]
    id = "token_revocation"
    type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
    name = "org.wso2.is.notification.ApimOauthEventInterceptor"
    order = 1
    [event_listener.properties]
    notification_endpoint = "https://localhost:${mgt.transport.https.port}/internal/data/v1/notify"
    username = "${admin.username}"
    password = "${admin.password}"
    'header.X-WSO2-KEY-MANAGER' = "default"

    [transport.https.properties]
    proxyPort = 443

    [[apim.event_hub.publish.url_group]]
    urls = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-1-service:9611"]
    auth_urls = ["ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-1-service:9711"]

    [[apim.event_hub.publish.url_group]]
    urls = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-2-service:9611"]
    auth_urls = ["ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-cp-2-service:9711"]

    [config_data]
    path = "/_system/apim/config"

    {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.apacheSolrIndexing.enabled }}
    [database.local]
    url = "jdbc:h2:/home/wso2carbon/solr/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

    [indexing]
    location = "/home/wso2carbon/solr/indexed-data"
    {{ else }}
    [database.local]
    url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"
    {{ end }}
  {{- end }}
