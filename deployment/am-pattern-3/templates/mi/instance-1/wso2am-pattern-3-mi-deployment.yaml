# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "am-pattern-3.resource.prefix" . }}-mi-1-deployment
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "am-pattern-3.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.wso2.deployment.mi.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wso2.deployment.mi.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.wso2.deployment.mi.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: {{ template "am-pattern-3.resource.prefix" . }}-mi
      node: {{ template "am-pattern-3.resource.prefix" . }}-mi-1
  template:
    metadata:
      annotations:
        checksum.mi.conf: {{ include (print $.Template.BasePath "/mi/wso2am-pattern-3-mi-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "am-pattern-3.resource.prefix" . }}-mi
        node: {{ template "am-pattern-3.resource.prefix" . }}-mi-1
    spec:
      initContainers:
        - name: init-cp
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of Control Plane deployment"; while ! nc -z {{ template "am-pattern-3.resource.prefix" . }}-am-cp-service 9443; do sleep 1; printf "-"; done; echo -e "  >> Control Plane has started";']
        - name: init-gw
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of Gateway deployment"; while ! nc -z {{ template "am-pattern-3.resource.prefix" . }}-am-gateway-service 8243; do sleep 1; printf "-"; done; echo -e "  >> Gateway has started";']
      containers:
        - name: wso2micro-integrator
{{- include "image" (dict "Values" .Values "deployment" .Values.wso2.deployment.mi) | indent 10 }}
          {{- if .Values.wso2.deployment.mi.synapseTest.enabled }}
          args:
            - "-DsynapseTest=true"
          {{- end }}
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 8290
            initialDelaySeconds: {{ .Values.wso2.deployment.mi.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.mi.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.deployment.mi.startupProbe.failureThreshold }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 8290
            periodSeconds: {{ .Values.wso2.deployment.mi.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9201
            initialDelaySeconds: {{ .Values.wso2.deployment.mi.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.mi.readinessProbe.periodSeconds }}
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.mi.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.mi.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.mi.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.mi.resources.limits.cpu }}
          imagePullPolicy: Always
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 8290
              protocol: TCP
            - containerPort: 9201
              protocol: TCP
            - containerPort: 9164
              protocol: TCP
          {{- if .Values.wso2.deployment.mi.synapseTest.enabled }}
            - containerPort: 9008
              protocol: TCP
          {{- end }}
          {{- if .Values.wso2.deployment.mi.envs }}
          env:
            {{- range $key, $val := .Values.wso2.deployment.mi.envs }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: wso2mi-conf
              mountPath: /home/wso2carbon/wso2-config-volume/conf
            {{- if .Values.wso2.deployment.am.customConfig.cryptography.enableSecureVault }}
            - name: wso2mi-security-conf
              mountPath: /home/wso2carbon/wso2-config-volume/conf/security
            - name: wso2-secrets
              mountPath: {{ .Values.wso2.deployment.mi.customConfig.cryptography.secret.mountPath }}
            {{- end }}
            - name: wso2mi-security-resources
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/resources/security
            - name: wso2mi-conf-entrypoint
              mountPath: /home/wso2carbon/docker-entrypoint.sh
              subPath: docker-entrypoint.sh
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{- if .Values.wso2.deployment.mi.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.mi.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ template "am-pattern-3.resource.prefix" . }}-mi-1-wso2-private-registry-creds
      {{ end }}
      volumes:
        - name: wso2mi-conf
          configMap:
            name: {{ template "am-pattern-3.resource.prefix" . }}-mi-conf
        {{- if .Values.wso2.deployment.mi.customConfig.cryptography.enableSecureVault }}
        - name: wso2mi-security-conf
          configMap:
            name: {{ template "am-pattern-3.resource.prefix" . }}-mi-security-conf
        - name: wso2-secrets
          secret:
            secretName: {{ .Values.wso2.deployment.mi.customConfig.cryptography.secret.name | quote }}
        {{- end }}
        - name: wso2mi-security-resources
          secret:
            secretName: {{ .Values.wso2.deployment.mi.customConfig.cryptography.securityResourcesSecret | quote }}
        - name: wso2mi-conf-entrypoint
          configMap:
            name: {{ template "am-pattern-3.resource.prefix" . }}-mi-conf-entrypoint
            defaultMode: 0407
